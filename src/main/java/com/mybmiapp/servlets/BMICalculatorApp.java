package com.mybmiapp.servlets;

import com.mybmiapp.dao.CalculationDao;
import com.mybmiapp.dao.CalculationDaoImpl;
import com.mybmiapp.dao.UserDao;
import com.mybmiapp.dao.UserDaoImpl;
import com.mybmiapp.models.Calculation;
import com.mybmiapp.models.User;
import com.mybmiapp.services.BMICalculator;
import com.mybmiapp.util.DatabaseConnection;
import com.mybmiapp.util.UserSessionUtil;

import java.sql.Connection;
import java.sql.SQLException;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.time.LocalDateTime;

public class BMICalculatorApp extends JFrame {

    private JTextField heightField;
    private JTextField weightField;
    private JButton calculateButton;
    private JLabel bmiLabel;

    private final CalculationDao calculationDao;
    private final UserDao userDao;
    private final Connection dm;


    public BMICalculatorApp() throws SQLException {
        this.dm = DatabaseConnection.getConnection();
        calculationDao = new CalculationDaoImpl(dm);
        userDao = new UserDaoImpl(dm);
    }

    private void initComponents() {
        setTitle("BMI Calculator");
        setSize(300, 200);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new GridLayout());

        heightField = new JTextField();
        add(new JLabel("Height (m)"));
        add(heightField);

        weightField = new JTextField();
        add(new JLabel("Weight (kg)"));
        add(weightField);

        calculateButton = new JButton("Calculate");
        add(calculateButton);
        calculateButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                double height = Double.parseDouble(heightField.getText());
                double weight = Double.parseDouble(weightField.getText());

                // Implement your BMI calculation logic here
                // For example:
                 
                double bmi = BMICalculator.calculateBMI(height, weight);
                bmiLabel.setText("Your BMI is " + bmi);

                // Save the BMI history to the database
                try {
                    User user = UserSessionUtil.getInstance(null).getCurrentUser(); // Get the current user
                    String category = BMICalculator.determineBMICategory(bmi);
                    String weightStatus = BMICalculator.determineWeightStatus(category);
                    String idealWeightRange = BMICalculator.calculateIdealWeightRange(height);

                    // Get the current timestamp
                    LocalDateTime timestamp = LocalDateTime.now();

                    Calculation calculation = new Calculation(
                            0, // The ID will be automatically generated by the database
                            user.getId(),
                            user.getGender(),
                            height,
                            weight,
                            bmi,
                            category,
                            timestamp // Add the timestamp to the Calculation object
                    );
                    calculationDao.addCalculation(calculation);
                } catch (Exception throwables) {
                    throwables.printStackTrace();
                }
            }
        });

        bmiLabel = new JLabel();
        add(bmiLabel);

        setVisible(true);
    }

    public static void main(String[] args) throws SQLException {
        new BMICalculatorApp();
    }
}
